- name: Upgrade Ubuntu Hosts
  hosts: ubuntu
  become: true
  vars:
    weekday_overwrite: false
  tasks:        
    - name: Check Weekday or Overwrite
      meta: end_host
      when:
        - not weekday_overwrite
        - ansible_date_time.weekday_number != weekday_run
        
    - name: Register Start Time
      set_fact:
        time_start:
          day: ansible_date_time.day
          month: ansible_date_time.month
          year: ansible_date_time.year
          hour: ansible_date_time.hour
          minute: ansible_date_time.minute
          second: ansible_date_time.second
        
    - name: Clean Up Apt
      apt:
        update_cache: no
        upgrade: 'no'
        autoremove: yes
        autoclean: yes

    - name: Upgrade Using Apt
      apt:
        update_cache: yes
        upgrade: dist
      register: upgrade

    - name: Check APT Based Servers for Restart
      shell: if [ -f /var/run/reboot-required ]; then echo '1'; else echo '0'; fi
      register: restart
      changed_when: restart.stdout == "1"

    - name: Restart Servers
      reboot:
        msg: Rebooting to complete system upgrade.
        post_reboot_delay: 10
        pre_reboot_delay: 10
        reboot_timeout: 3600
      when:
        - restart.stdout is defined
        - restart.stdout == "1"
        
    - name: Register End Time
      set_fact:
        time_end: {{ ansible_date_time }}

    - name: Calculate Result Variables
      set_fact:
        msg:
          themeColor: '{{ "FF0000" if upgrade.stderr_lines else "00FF00" }}'
          title: "Upgrade Result of {{ inventory_hostname }}"
          text: '{{ "Upgrade failed! Please check logs and server status." if upgrade.stderr_lines else "Upgrade successful! Please check if server up." }}'
          sections:
            - title: '{{ "**error log**" if upgrade.stderr_lines else "" }}'
              text: "{{ upgrade.stderr_lines | join('\n\r') if upgrade.stderr_lines else '' }}"
            - title: '{{ "**output log**" if upgrade.stdout_lines else "" }}'
              text: "{{ upgrade.stdout_lines | join('\n\r') if upgrade.stdout_lines else '' }}"
            - facts:
              - name: "Start Time"
                value: "{{ time_start.day }}/{{ time_start.month }}/{{ time_start.year }} - {{ time_start.hour }}:{{ time_start.minute }}:{{ time_start.second }}"
              - name: "End Time"
                value: "{{ time_end.day }}/{{ time_end.month }}/{{ time_end.year }} - {{ time_end.hour }}:{{ time_end.minute }}:{{ time_end.second }}"

    - name: Send Result
      uri:
        url: https://outlook.office.com/webhook/346d76e4-73df-477e-8d87-7037cd95ddda@25abd651-b70f-4e71-9068-45b40b2ffbd3/IncomingWebhook/c6a4406c4008411984aaa984f0ef6acd/d99bba4b-f146-4a62-bb27-02fb1ca70dbf
        method: POST
        body_format: json
        body: ' {{ msg | to_json }} '


